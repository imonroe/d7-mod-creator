<?php 
/**
*	Command-line script 
*
*/
error_reporting(E_ERROR | E_PARSE);
require "class_CommandLine.php";
$script_version = "1.02beta, by Ian Monroe (http://www.ianmonroe.com)";
echo("This script quickly sets up a boilerplate module for drupal 7.".PHP_EOL.PHP_EOL);

// Let's get some feedback so we know what we're doing.
$module_name = CommandLine::ask_user("What would you like to name this module?  e.g., demo_module: ");
$module_human_name = CommandLine::ask_user("What would you like the descriptive name to be? e.g., Demonstration Module: ");
$module_description = CommandLine::ask_user("Tell me a short description of the module: ");
$module_author = CommandLine::ask_user("What name should I list as author?: ");

$default_core_version = '7.x';
$default_package = 'default package';
$default_module_version = '7.x-1.0';
$default_author = $module_author;
$default_create_date = date(DATE_RFC2822);

// set up the directories.
CommandLine::create_directory($module_name);
CommandLine::create_directory($module_name.'/css');
CommandLine::create_directory($module_name.'/js');

// Let's create our files.
// .module:
$module_filename = $module_name.'/'.$module_name.'.module';
$basic_module_content = "
<?php
  /**
  * Module: {$module_human_name}
  *
  * Author: {$default_author}
  * Created: {$default_create_date}
  * Version: {$default_module_version}
  *
  * boilerplate generated by {$argv[0]} version {$script_version}
  */
  
  /**
   * Implements hook_menu().
   */
  function {$module_name}_menu() {
  
    ".'$items'."['{$module_name}_example'] = array(
      'title' => 'Example Page',
      'page callback' => '_{$module_name}_page',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
    );
  
    return ".'$items'.";
  }
        
  /**
   * Implements hook_help().
   */
  function {$module_name}_help(".'$path, $arg'.") {
  
    switch (".'$path'.") {
      case 'admin/help#{$module_name}':
  
        // Return a line-break version of the README.
        ".'$readme'." = file_get_contents(drupal_get_path('module', '{$module_name}') . '/README.txt');
        return nl2br(".'$readme'.");
    }
  }
  
  /**
   * Page example callback, referenced in hook_menu().
   *
   * Description of what the page displays.
   * Second line of the description.
   *
   * @return string
   *   The content of the page.
   */
  function _{$module_name}_page() {
  
    return 'example';
  }
";
CommandLine::create_file($module_filename, $basic_module_content);

// .info
$info_filename = $module_name.'/'.$module_name.'.info';
$basic_info_content = "name =\"{$module_human_name}\"
description = \"{$module_description}\"
core = \"{$default_core_version}\"
package = \"{$default_package}\" 
version = \"{$default_module_version}\"
";
CommandLine::create_file($info_filename, $basic_info_content);

// .install
$install_filename = $module_name.'/'.$module_name.'.install';
$basic_install_content = "
<?php

/**
 * @file
 * Install and uninstall code for {$module_name}.
 *
 */


/**
 * Implements hook_install().
 */
function {$module_name}_install() {
  // Do some things on install, like setting the module weight.
}

/**
 * Implements hook_uninstall().
 */
function {$module_name}_uninstall() {
  // Do some things on uninstall, like deleting all variables.
}     
";
CommandLine::create_file($install_filename, $basic_install_content);

// .api.php
$API_filename = $module_name.'/'.$module_name.'.api.php';
$basic_API_content = "
<?php
/**
 * @file
 * Hooks and API functions provided by {$module_name}.
 */
 
";
CommandLine::create_file($API_filename, $basic_API_content);

// README
$readme_filename = $module_name.'/README.txt';
$basic_readme_content = "{$module_human_name}
=============

{$module_description}
 
";
CommandLine::create_file($readme_filename, $basic_readme_content);


echo ("Finished Script.".PHP_EOL);
exit();
?>



